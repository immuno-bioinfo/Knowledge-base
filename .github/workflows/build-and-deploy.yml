name: Build and Deploy Knowledge Base

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.3.0'

    - name: Setup Pandoc
      uses: r-lib/actions/setup-pandoc@v2

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev

    - name: Cache R packages
      uses: actions/cache@v3
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-r-packages-${{ hashFiles('**/DESCRIPTION') }}-v2
        restore-keys: |
          ${{ runner.os }}-r-packages-

    - name: Install R dependencies
      env:
        RENV_ACTIVATE: "FALSE"
      run: |
        Rscript -e "
        # Disable renv if it's active
        if ('renv' %in% loadedNamespaces()) {
          try(renv::deactivate(), silent = TRUE)
        }

        packages <- c('rmarkdown', 'knitr', 'here', 'sessioninfo', 'DT', 'plotly', 'readr', 'dplyr', 'htmlwidgets')
        new_packages <- packages[!(packages %in% installed.packages()[,'Package'])]
        if(length(new_packages)) {
          cat('Installing packages:', paste(new_packages, collapse=', '), '\n')
          install.packages(new_packages, dependencies=TRUE, repos='https://cran.rstudio.com/')
        } else {
          cat('All required packages already installed from cache\n')
        }
        cat('Installed packages:\n')
        print(installed.packages()[packages[packages %in% installed.packages()[,'Package']], c('Package', 'Version')])
        "

    - name: Create output directory
      run: mkdir -p _site

    - name: Build R Markdown files
      run: |
        # Create a script to render all .Rmd files
        cat > render_all.R << 'EOF'
        library(rmarkdown)
        library(here)

        # Function to render Rmd files
        render_rmd_files <- function(dir) {
          rmd_files <- list.files(dir, pattern = "\\.Rmd$", full.names = TRUE, recursive = TRUE)

          for (file in rmd_files) {
            # Skip template files
            if (grepl("templates/", file)) next

            cat("Rendering:", file, "\n")

            # Determine output directory
            rel_path <- gsub("^\\./", "", file)
            output_dir <- file.path("_site", dirname(rel_path))
            dir.create(output_dir, recursive = TRUE, showWarnings = FALSE)

            # Render to HTML
            tryCatch({
              rmarkdown::render(
                file,
                output_format = "html_document",
                output_dir = output_dir,
                quiet = TRUE
              )
            }, error = function(e) {
              cat("Error rendering", file, ":", e$message, "\n")
            })
          }
        }

        # Render all directories
        dirs <- c("analyses", "protocols", "tutorials", "references")
        for (dir in dirs) {
          if (dir.exists(dir)) {
            render_rmd_files(dir)
          }
        }

        # Create index.html
        if (file.exists("README.Rmd")) {
          rmarkdown::render("README.Rmd",
                          output_format = html_document(toc = TRUE, toc_float = TRUE),
                          output_file = "_site/index.html")
        }
        EOF

        Rscript render_all.R

    - name: Create site navigation
      run: |
        # Get organization and repository name automatically
        ORG_NAME="${{ github.repository_owner }}"
        REPO_NAME="${{ github.event.repository.name }}"

        # Create a simple index page if it doesn't exist
        if [ ! -f "_site/index.html" ]; then
          cat > _site/index.html << EOF
        <!DOCTYPE html>
        <html>
        <head>
            <title>Single Cell Omics Knowledge Base</title>
            <meta charset="utf-8">
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
        </head>
        <body>
            <div class="container mt-4">
                <h1>Single Cell Omics Knowledge Base</h1>
                <p>Welcome to our collaborative knowledge base for single-cell omics research!</p>
                <div class="row">
                    <div class="col-md-6">
                        <h3>Browse Content</h3>
                        <ul class="list-group">
                            <li class="list-group-item"><a href="analyses/">Analyses</a></li>
                            <li class="list-group-item"><a href="protocols/">Protocols</a></li>
                            <li class="list-group-item"><a href="tutorials/">Tutorials</a></li>
                            <li class="list-group-item"><a href="references/">References</a></li>
                        </ul>
                    </div>
                    <div class="col-md-6">
                        <h3>Quick Links</h3>
                        <ul class="list-group">
                            <li class="list-group-item"><a href="https://github.com/${ORG_NAME}/${REPO_NAME}">GitHub Repository</a></li>
                            <li class="list-group-item"><a href="https://github.com/${ORG_NAME}/${REPO_NAME}/blob/main/CONTRIBUTING.md">Contributing Guide</a></li>
                            <li class="list-group-item"><a href="https://github.com/${ORG_NAME}/${REPO_NAME}/issues">Report Issues</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </body>
        </html>
        EOF
        fi

    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.PUSH_SECRET }}
        publish_dir: ./_site
        publish_branch: gh-pages
